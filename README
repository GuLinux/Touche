Touché is an application aimed at making "just work" every key on your keyboard.
It's still in heavy development stage, and therefore is missing lots of stuff, but it's already usable.
The current "reference" keyboard is mine, a "Microsoft Wireless Keyboard 3000".
The "standard" special keys, like "Media Play", or "Volume Up" do work out of the box on every GNU/Linux distribution, 
but other keys, like "ZoomIn/Out", and the "1-2-3-4-5-*" keys in the upper part don't. Instead they send an event to /dev/usb/hiddev0.
Touché does detect these events, and allows you to transform them to known X key symbols, or to execute arbitrary commands.
Support for new keyboards should be easly added, the application does print the events when they're sent, so they can be added in a ney "keyboard database" entry.

Touché is released under GPLv3 license (included in the COPYING file)

-----------------------------------------

* Install Instructions:
First you need to build the static library, and install it to a temporary location.
Then you can choose between the Qt GUI (simpler) and the KDE GUI (much more beautiful, using KDE styles and color settings).

# Core library: 
mkdir Touché_staticlib.build
cd Touché_staticlib.build
qmake ../Touché_staticlib
#ake install # it will only install the static library to /tmp, to allow compiling of the main application

# Qt GUI: 
mkdir ../Touché.build
cd ../Touché.build
qmake ../Touché
make install # this will install both the binary and its required dependencies, like udev rule for permissions and keyboard database.

# KDE GUI:
mkdir ../Touché-kde.build
cd ../ Touché-kde.build
qmake ../Touché-kde
make install


* Configuration:
Currently there is no gui for configuration. Hopefully it will be added soon enough :)
There is a sample configuration file in Touché/files/samples_config/.
Just copy it in the this path:
  $HOME/.config/GuLinux/Touché.conf

Inside you can find some configuration examples. Just follow the pattern: the key names are in the keyboard database file ( /usr/share/Touché/keyboard_database.json )
